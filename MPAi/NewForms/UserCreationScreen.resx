<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="logoBox.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAGYktHRAD/AHcAd6z45rkAAAAHdElNRQfhARkAGxZcXy3p
        AAAEfElEQVR4Xu2bu07jQBSGQVBQIhAvQEkLQrRIPAK8Ag+wDY8ABdvQ0UHCLSEQCLckhFwIdyHR0iAa
        ahqEhMRldj5j73qTrJl4Jpc1+aRfcuLJyZzf9tgeH7e1aNGihZurq6uby8tL4dbFxYWl8/PzPzo7E2e2
        Tk9P/+jkRJyg4okoFou/dXx8/KlCQRQc5VFe5FEuJ3KOsllL2SN0JI4cZTIigw4PLR06SqdFGqVSllIo
        iZIieYAOxMGnbuw0/w0JB5WD/X1hp/lvWgYE2ID9vW9vwN7XBjDYBZW93d3GG/D+/i4+Pj4qinW1RMkA
        TnG1wEn8K2ppxG6jDHAn/vb2JvblaDw+Pi66u7stscx3rHNQMatadnd26m+AO5Hb21vR09NDJyqKdbRx
        MG2CmgHyys4UpcnL8EqqlQk7CQUDuLQ1Abuz03mWvbZ8qWjrHA7EcB8aOuwkEsT3xpQB7oGM41uGrkr8
        xsHUoJhQMYAbGhO4d10GORm6KvEbB1OHQWK7QQYw0svQVYnfOJgzYJvY3gTZgO2tLWJ7w/28CdydbpZD
        QMkAJjNM4O607iBoyoCtuIoBRTMGuEdundMgmDoLbMXjxPeG6SsTkIB7y+lcCJm6DqirAfD6+movfUJi
        XnsC69zJg6ndH+KbdTYASndftibHN4McIz1ime9Kt7TJ5CG+ufm1AczcBpX4xjc3YHNjQ8GAQsFuXnte
        Xl6M7+ZeKBnAA4tawXhwfX0tZmZmxNjYmOjq6hJ9fX1iYmJCzM/Pi/v7e7tlbdiIxepvwN3dnZUcSfb2
        9tIBT/X394vJyUkRjUbF4+OjHcUMagbk9Q14fn4WU1NTYmBgoCzBatTR0SEGBwetWE9PT3Z0/8TWlQzI
        2839Mz09XZaMroipS2x9nVje8KBSl+Hh4bIEdDU0NGRH908sqmJALmc398fDw4Nob28vS8CEGE90iMlx
        RcbxhsfTOszNzZV13JRmZ2ftf/HHej0MGB0dLeu4KY2MjNj/4g81A7JZu7k/Ojs7yzpuShxaOkQjdTBA
        hqipdIhGIsTwhrIUHWSImkqHyNoaMbyhJkcHGcLSjwpy1ulIh8iqggEUI+kgQ1giYbnwW81gwNrqKjG8
        aRmQydjN/SFDWGpKA1YUDKAOzxc/f1oiUUfy3/4yoFTy76qWDqsrK8TwhgJEX2AAHawkzt8l330vAyqo
        IQYsKxhA6akv/gsDlonhjZYBTT4GrCgZkE7bzf0hQ1giQbnwlwHOOh3psLy0RAxvqLrWQYaw1JQGhFUM
        SKXs5pqUjgl8bjBL4XCdDShVg1kKKRjAywZBRc2AZHANCIdCKgYk7ebBQ8kA3rEJKuFFJQMO7ObBI7S4
        +LUBvF0VVEILagbc8HIR4h0bXjPhRQNEvT0V14jCY2pvKT+lApMiRMrQENVY1OMgylKozKA4gcfTiIeU
        iGd1PK7iiQ0PLZi2RszeMoHJHB7TWExkWJL389zRWZI3Nlzbc3nLFR4XOZznGekRx7sluduz5Uk+tLDw
        9WtzLVq0+Ea0tf0CuI3hjH+8d2QAAAAASUVORK5CYII=
</value>
  </data>
</root>