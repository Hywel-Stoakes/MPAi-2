<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="logoBox.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAGYktHRAAAAAAAAPlDu38AAAAHdElNRQfhARgWMTE2KewN
        AAAEdUlEQVR4Xu2buU7zQBSFQVBQIhAvQEkLQrRIPAK8Aq/AI0BBRUcH2feEJGQjZCFhFRItDaKhpkFI
        SCzzzzHjP6MEnInvOCDjTzpS5Exu5h7bY3vmesTDw8ND5urq6uby8pLJuri4MHR+ft7R2Rk7Ezo9Pe2o
        3WZtqNVmrVbrv05OTj7VbLKmqQbUYA2oXmd1U7WaodoxdMyOTVWrrAodHRk6MlWpsApULhsqQyWoxEpF
        qMiKn7oRaX4PEnYrxUKBiTS/xzPAxQYUDv+8AYf9DcBg51YO8/mfN+D9/Z19fHx8KXznJEoG4BLnBGbi
        /XDSiPxPGSAn/vb2xgp8NF5dXWWTk5OG8Bnb8J2JilmDks/lhm+AnMjt7S2bmppCJ74UvkMbE90mqBnA
        7+x00Z08D68kp0zIZRUMwK2tDnA4m53HZ6s93y20NU8HxJBPDQq5bBbxrdFlgDyQ4fzmoQcSfmOia1DM
        qhiABxodyIcuBjkeeiDhNya6ToPswQ8ZgJGehx5I+I2JPgMOENsaNxtwkMkgtjV4nteB3OnfcgooGYDJ
        DB3InaYOgroMyKRVDGjpMUAeuSmXQaDrKpBJpxHfGkxf6QAJyHuOciOk6z5gqAaA19dX8ekTJGZ1JOA7
        OXmg6/AH6dSQDQDdhy/2Js5vDHIY6SF8xrbuPa0zeZBOpfobgJlbt5JO/nEDUsmkggHNpmjuPC8vL9oP
        cyuUDMCChVNgPLi+vmZbW1tsZWWFTUxMsJmZGba2tsZ2d3fZ/f29aOkMyURi+Abc3d0ZySHJ6elpdMBS
        s7OzbH19ncViMfb4+Cii6EHNgAbdgOfnZ7axscHm5uZ6EhxEY2NjbH5+3oj19PQkotsnEVcyoCGa22dz
        c7MnGaoQk0oiHkcsa7BQSWVxcbEnAaoWFhZEdPskYioG1OuiuT0eHh7Y6OhoTwI6hPGEQoKPKzyONVie
        prCzs9PTcV3a3t4W/2KP+DAMWF5e7um4Li0tLYl/sYeaAbWaaG6P8fHxno7rEk4tCrHoEAzgIRwVhVg0
        ihjWoCyFAg/hqChEIxHEsAY1ORR4CEdFIRpWMADFSBR4iE5nJcnbKaIQCYcRwxrPgGpVNLcHD9HprCR5
        O0UUIiEFA1CHR4GH6HRWkrydIgrhUAgxrEEBom3QQUXxv7IlCp4BQQUDUHpqG3RQUfyvbIlCOBhEDGtI
        BnB4iE5nJcnbKaIQUjKgUhHN7cFDdDorSd5OEYVgIIAY1qDqmgIP0emsJHk7RRSCfhUDymXRXAPosKlf
        QMDvH7IBv4yAT8EAvGzgVtQMKLnXAL/Pp2JASTR3H0oG4B0bt+LfVzKgKJq7D9/+fn8D8HaVW/HtqRlw
        g5eLILxjg9dM8KIBhHp7VFxDKDxG7S3KT1GBiSJElKFBqMZCPQ6EshRUZqA4AcvTEBYpIazVYbkKKzZY
        tMC0NYTZW0xgYg4P01iYyDDEn+fxRGeIP9jg3h63t7jDw00OrvMY6SGc74b4YY89j+R9e3v9X5vz8PD4
        Q4yM/ANmCN7eJcjp7gAAAABJRU5ErkJggg==
</value>
  </data>
</root>