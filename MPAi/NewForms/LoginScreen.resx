<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAGYktHRAAAAAAAAPlDu38AAAAHdElNRQfhARgWIzVJsFjH
        AAAERUlEQVR4Xu2buU7rQBSGQVBQIhAvQEkLQrRIPAK8Aq/AI0BBRUcHCdkTAknIRshCwiokWhpEQ02D
        kJBYzp3fjC9Wwp1MPDPhyvEn/VIUT058ftvj8czxkI+Pj4+T6+vr26urK3Lq8vLS0sXFxbfOz+mc6+zs
        7FutFrWgZouazeZfnZ6efqnRoIatOlSnOlSrUc1WtWqpegKd0ImtSoUq0PGxpWNb5TKVoVLJUgkqQkUq
        FqACFb50y9P8N0jYqxTyeeJp/hvfAA8bkD8aeAOOuhuAzs6rHOVyv2/Ax8cHfX5+/ihsM4mUAbjFmcBO
        vBsmjcj9lgHOxN/f3ynPeuPl5WUaHx+3hM/4DttsZMzqlVw2238DnInc3d3RxMQEduJHYRva2Og2Qc4A
        NrLTRXvyLLyUTJmQzUgYgKGtDnA62zuPz6Ij3y60tS8HxHBeGipkMxnEF6PLAGdHhuubhe5J+I2Nrk4x
        I2MAHmh04Dx10cmx0D0Jv7HRdRlkDn/JAPT0LHRPwm9s9BlwiNhivGzA4cEBYovB87wOnDv9v1wCUgZg
        MkMHzp1W7QR1GXCQljGgqccAZ8+tchsEuu4CB+k04ovB9JUOkIDzyKkMhHSNA/pqAHh7e+OfvkBiojMB
        25zJA12nP0jv99kA0H764mji+kYnh54ewmd8136kdSYP0vv73Q3AzK1XSacG3ID9VErCgEaDNzfP6+ur
        9tNchJQBWLAwBfqDm5sb2tjYoKWlJRobG6OpqSlaWVmh7e1tenh44C3NkEom+2/A/f29lRySnJycxA4I
        NT09TaurqxSPx+np6YlH0YOcAXV1A15eXmhtbY1mZmY6EuxFIyMjNDs7a8V6fn7m0d2TTEgZUOfN3bO+
        vt6RjKoQU5VkIoFYYrBQqcr8/HxHAqqam5vj0d2TjMsYUKvx5u54fHyk4eHhjgR0CP2JCknWr7A4YrA8
        rcLW1lbHjuvS5uYm/xd3JPphwOLiYseO69LCwgL/F3fIGVCt8ubuGB0d7dhxXcKlpUI81gcDWAijUiEe
        iyGGGJSlqMBCGJUKsWgUMcSgJkcFFsKoVIhFJAxAMZIKLIRRqRCNRBBDjG9ApcKbu4OFMCoVomEJA1CH
        pwILYVQqRMJhxBCDAkQVWAijUsE3ICRhAEpPVWAhjEqFSCiEGGK8bEBYyoBymTd3BwthVCqE9vYQQwyq
        rlVgIYxKhVBQxoBSiTf3HnvB4IAbEJAwAC8beBU5A4reNSAYCMgYUOTNvYeUAXjHxqsEd6UMKPDm3iOw
        u9vdALxd5VUCO3IG3OLlIgjv2OA1E7xoAKHeHhXXEAqPUXuL8lNUYKIIEWVoEKqxUI8DoSwFlRkoTsDy
        NIRFSghrdViuwooNFi0wbQ1h9hYTmJjDwzQWJjIssed5PNFZYg82GNtjeIsRHgY5uM+jp4dwvVtipz2O
        PJIP7Ox0f23Ox8dngBga+gOXprgFm699dQAAAABJRU5ErkJggg==
</value>
  </data>
</root>